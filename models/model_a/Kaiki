**Teste Deeplabv3 Kaiki**

import torch
from torchvision import models, transforms
from PIL import Image
import matplotlib.pyplot as plt

#Carrega o modelo
model = models.segmentation.deeplabv3_resnet101(pretrained=True).eval()

#Segmentação semântica
def segment_image(image_path):
    input_image = Image.open(image_path)
    preprocess = transforms.Compose([
        transforms.ToTensor(),
        transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),
    ])

    input_tensor = preprocess(input_image)
    input_batch = input_tensor.unsqueeze(0)

    if torch.cuda.is_available():
        input_batch = input_batch.to('cuda')
        model.to('cuda')

    with torch.no_grad():
        output = model(input_batch)['out'][0]
    output_predictions = output.argmax(0)

    plt.imshow(input_image)
    plt.imshow(output_predictions.cpu().numpy(), alpha=0.8)
    plt.axis('off')
    plt.show()

image_path = ''

segment_image(image_path)
